name: pipeline
on:
  push:
    branches:
      - main

jobs:
  swagger:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Go environment
        uses: actions/setup-go@v3.5.0
        with:
          go-version: "1.20.0"
          architecture: amd64
      - name: Init swag
        run: go install github.com/swaggo/swag/cmd/swag@latest
      - name: Update Swagger
        run: chmod +x generateSwagger.sh && sh generateSwagger.sh
      - name: Commit message
        run: |
          echo "COMMIT_MESSAGE=$(git log -1 --pretty=%B)" >> $GITHUB_ENV
      - name: Commit changes
        uses: EndBug/add-and-commit@v9
        with:
          commit: --amend
          author_name: Mihael Macuka
          author_email: mihaelmacuka2@gmail.com
          message: ${{ env.COMMIT_MESSAGE }}
          add: 'docs/*'
          push: true
  build:
    needs:
      - swagger
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Go environment
        uses: actions/setup-go@v3.5.0
        with:
          go-version: "1.20.0"
          architecture: amd64
      - name: Build app
        run: env CGO_ENABLED=0 GOOS="linux" GOARCH="amd64" go build -o main "./src/main.go"
      - uses: actions/upload-artifact@master
        with:
          name: main
          path: ./main
  stopService:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Stop service
        uses: garygrossgarten/github-action-ssh@release
        with:
          command: sudo service auth-service stop
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          privateKey: ${{ secrets.SSH_KEY }}
#  flyway:
#    runs-on: ubuntu-latest
#    needs: stopService
#    steps:
#      - uses: actions/checkout@master
#      - name: Postgres Dump Backup
#        uses: tj-actions/pg-dump@v2.3
#        with:
#          database_url: "postgres://${{ secrets.DATABASE_USER }}:${{ secrets.DATABASE_PASSWORD }}@${{ secrets.DEPLOY_HOST }}:5432/${{ secrets.DATABASE_NAME }}"
#          path: "backup.sql"
#          options: "-O"
#      - uses: actions/upload-artifact@master
#        with:
#          name: backup
#          path: ./backup.sql
#      - name: Copy Flyway files
#        uses: appleboy/scp-action@v0.1.4
#        with:
#          source: ./flyway/*
#          target: /app/auth/
#          host: ${{ secrets.DEPLOY_HOST }}
#          username: ${{ secrets.DEPLOY_USER }}
#          key: ${{ secrets.SSH_KEY }}
#      - name: Run flyway
#        uses: garygrossgarten/github-action-ssh@release
#        with:
#          command: flyway -locations="filesystem:/app/auth/flyway" -schemas=auth migrate
#          host: ${{ secrets.DEPLOY_HOST }}
#          username: ${{ secrets.DEPLOY_USER }}
#          privateKey: ${{ secrets.SSH_KEY }}
  deploy:
    runs-on: ubuntu-latest
    needs:
      - build
      - stopService
#      - flyway
    steps:
    - uses: actions/checkout@master
    - uses: actions/download-artifact@master
      name: Download artifacts
      with:
        name: main
        path: ./main
    - name: Copy artifact
      uses: garygrossgarten/github-action-scp@release
      with:
        local: main
        remote: /app/auth
        host: ${{ secrets.DEPLOY_HOST }}
        username: ${{ secrets.DEPLOY_USER }}
        privateKey: ${{ secrets.SSH_KEY }}
    - name: Make service executable
      uses: garygrossgarten/github-action-ssh@release
      with:
        command: chmod +x /app/auth/main
        host: ${{ secrets.DEPLOY_HOST }}
        username: ${{ secrets.DEPLOY_USER }}
        privateKey: ${{ secrets.SSH_KEY }}
  startService:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Start service
        uses: garygrossgarten/github-action-ssh@release
        with:
          command: sudo service auth-service start
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          privateKey: ${{ secrets.SSH_KEY }}
